#include "inc/hw_ints.h"
#include "inc/hw_memmap.h"
#include "inc/hw_types.h"
#include "driverlib/debug.h"
#include "driverlib/gpio.h"
#include "driverlib/pin_map.h"
#include "driverlib/rom.h"
#include "driverlib/sysctl.h"
#include "driverlib/timer.h"
#include "driverlib/interrupt.h"
#include "utils/uartstdio.h"
#define RED_LED   GPIO_PIN_1
#define BLUE_LED  GPIO_PIN_2
#define GREEN_LED GPIO_PIN_3
#define IR_PORT          GPIO_PORTA_BASE
#define IR_PIN           GPIO_PIN_2
#define irmode           GPIO_PIN_2
void main(void)
{
 // Set IR PIN as INPUT
  ROM_GPIOPinTypeGPIOInput(IR_PORT, IR_PIN);

 // Set the clocking to run directly from the crystal. (16MHZ)
  ROM_SysCtlClockSet(SYSCTL_SYSDIV_1 | SYSCTL_USE_OSC | SYSCTL_OSC_MAIN |
                       SYSCTL_XTAL_16MHZ);

// Enable ALL the GPIO port(s) used
 ROM_SysCtlPeripheralEnable(SYSCTL_PERIPH_GPIOF);  // On-Board LEDs on PORTF
  ROM_SysCtlPeripheralEnable(SYSCTL_PERIPH_GPIOA);  // IR Receiver on PA2
 
// Set the LED pins to OUTPUT
  ROM_GPIOPinTypeGPIOOutput(GPIO_PORTF_BASE, GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_3);
 
  // Set all the outputs LOW
  ROM_GPIOPinWrite(GPIO_PORTF_BASE, GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_3, 0);
while (1)
{
if(irmode==0)
{
 ROM_GPIOPinWrite(GPIO_PORTF_BASE, BLUE_LED, 0x0F);
}
elseif(irmode==1)
{
ROM_GPIOPinWrite(GPIO_PORTF_BASE, BLUE_LED, 0x00);
ROM_GPIOPinWrite(GPIO_PORTF_BASE, GREEN_LED, 0x0F);
}
else
{
ROM_GPIOPinWrite(GPIO_PORTF_BASE, BLUE_LED, 0x0F);
ROM_GPIOPinWrite(GPIO_PORTF_BASE, GREEN_LED, 0x0F);
ROM_GPIOPinWrite(GPIO_PORTF_BASE, GREEN_LED, 0x0F);
}
}
}





